{"name":"Gest.js","tagline":"gest.js is a webcam based gesture recognition library that helps developers make webpages more immersive","body":"#What is gest.js? Check out this presentation from MelbJS\r\n\r\nThis is a short presentation I gave at MelbJS that summarises gest.js: [http://hadimichael.github.io/gestjs-presentation/](http://hadimichael.github.io/gestjs-presentation/)\r\n\r\n#gest.js IN THE WILD\r\n\r\n- Air2048 Tile Game [http://bennettfeely.com/air2048/](http://bennettfeely.com/air2048/) - thanks to [@bennettfeely](http://twitter.com/bennettfeely)\r\n\r\n- The University of Connecticut are using gest.js on a large-screen lobby display [http://grad.uconn.edu/lobbydisplay/winter/](http://grad.uconn.edu/lobbydisplay/winter/) - thanks to [@joelsalisbury](http://twitter.com/joelsalisbury)\r\n\r\n- Stop the Elves - Christmas game [http://stoptheelves.thirststudios.com/](http://stoptheelves.thirststudios.com/) - thanks again to [@LochieAxo](http://twitter.com/LochieAxo)\r\n\r\n- Gesture game [http://thirst-staging.com/experiments/gest/](http://thirst-staging.com/experiments/gest/) - thanks to [@LochieAxo](http://twitter.com/LochieAxo)\r\n\r\nAre you using gest.js? Please get in touch [@hadi_michael](http://twitter.com/hadi_michael)\r\n\r\n#EXAMPLES\r\n\r\nA simple gest.js demo that displays the gesture direction on screen: [http://hadimichael.github.io/gest.js/demos/simple/index.html](http://hadimichael.github.io/gest.js/demos/simple/index.html)\r\n\r\nUsing gest.js to control [Nathan Searles' SlidesJS](http://www.slidesjs.com/): [http://hadimichael.github.io/gest.js/demos/slidesjs/index.html](http://hadimichael.github.io/gest.js/demos/slidesjs/index.html)\r\n\r\n#USAGE\r\n\r\n##Include the library (gest.js)\r\nYou will need to include the 'gest.js' library using something like:\r\n\r\n<code>&lt;script type=\"text/javascript\" src=\"gest.min.js\"&gt;&lt;/script&gt;</code>\r\n\r\n##Start gesture detection\r\nYou can start gest.js by calling:\r\n<code>gest.start();</code>\r\n\r\n##Listen for recognised gestures\r\n\r\n### Method 1 (recommended)\r\nUse the <code>.options.subscribeWithCallback(...)</code> function to listen for gestures:\r\n<pre><code>gest.options.subscribeWithCallback(function(gesture) {\r\n\t//handle gesture .direction .up .down .left .right .error\r\n});\r\n</code></pre>\r\nThis method is recommended because it will automatically handle cross-browser event handling.\r\n\r\n### Method 2\r\nYou can register an event listener on the <code>document</code> for <code>gest</code> using:\r\n<pre><code>document.addEventListener('gest', function(gesture) {\r\n\t//handle gesture .direction .up .down .left .right .error\r\n}, false);\r\n</code></pre>\r\n\r\n##How to handle recognised gestures\r\nOn every event, you will be passed a <code>gesture</code> object that contains:\r\n\r\n- <code>.direction</code> the recognised gesture in words as a string\r\n- <code>.up</code> boolean, true if the recognised gesture is up\r\n- <code>.down</code> boolean, true if the recognised gesture is down\r\n- <code>.left</code> boolean, true if the recognised gesture is left\r\n- <code>.right</code> boolean, true if the recognised gesture is right\r\n- <code>.error</code> an error object with...\r\n\t- <code>.code</code> a code as an int\r\n\t- <code>.message</code> and a message as a string\r\n\r\n##Stop gesture detection\r\nYou can stop gest.js at any time by calling:\r\n<code>gest.stop();</code>\r\n\r\n##Using Options\r\n\r\n###Sensitivity (80 by default)\r\nYou can specify the degree of colour change that should be used to determine whether or not a pixel has changed. The specified value should range from 0-100, with 100 implying that the slightest change should be enough. You can specify sensitivity using: <code>gest.options.sensitivity(85);</code>\r\n\r\n###Skin Filtering (off by default)\r\nTo improve recognition in bright lighting conditions, you can enable HSV skin filtering using: <code>gest.options.skinFilter(true);</code>\r\n\r\n###Debugging (off by default)\r\nIn order to view the video stream and enable <code>console.log(â€¦)</code> messages, you will need to toggle debugging using: <code>gest.options.debug(true);</code>\r\n\r\n#WHAT'S CHANGED\r\n\r\n##v0.5.0 (latest)\r\n\r\n- Firefox support (woohoo!)\r\n- Error handling, all the way back to the stone-age (IE7)\r\n- Better event handling\r\n- Ability for the developer to define sensitivity\r\n- A new <code>.options.subscribeWithCallback(...)</code> function\r\n- On screen messages is now DEPRECATED. I decided that this is something that the front-end developer should build - it shouldn't be part of the library. If you really want it back, check demo/simple.\r\n- Locking is now DEPRECATED. It wasn't an elegant enough solution. It might come back in future releases...\r\n\r\n#TODO\r\n- bespoke.js plugin (this is pretty much done, I just need to package it up)\r\n- Fine tune skin filtering values\r\n- Include a ready flag... might do this, not sure yet.\r\n- Bring back the ready message: \"The force is strong with you, go forth and gesture.\"\r\n\r\n#Acknowledgements\r\ngest.js is an extension of work started by William Wu [https://github.com/willy-vvu](https://github.com/willy-vvu).\r\n\r\n#LICENSE (MIT)\r\n\r\nCopyright (c) 2013, Hadi Michael (http://hadi.io)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","google":"UA-46664260-1","note":"Don't delete this file! It's used internally to help with page regeneration."}